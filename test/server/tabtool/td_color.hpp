//THIS FILE IS GENERATED BY tabtool, DO NOT EDIT IT!
//GENERATE TIME [2018/1/19 15:42:21]
#pragma once
# include "readtablefield.h"
# include "tablestruct.h"

namespace game_data {

struct td_color_item {
  int32_t color_id;
};

class td_color : public IConfigTable<td_color_item>{
public:
virtual bool Load() {
	ReadTableFile reader;
	reader.Initialize();

	if (!reader.Init(GetTableFile().c_str()))
		return false;

	try {
		DataReader dr;
		int iRows = reader.GetRowCount();
		int iCols = reader.GetColCount();
		for (int i = 1; i < iRows; ++i) {
			td_color_item item;
			item.color_id = dr.GetValue<int32_t>(reader.GetValue(i, "color_id"));
			m_Items[item.color_id] = item;
		}
	} catch(std::exception& e) {
		std::cerr << e.what() << std::endl;
		return false;
	}
	return true;
}

string GetTableFile() {
	string f = WORK_DIR;
	f = f + "Color.txt";
	return f;
}

};

}
